services:
  app:
    build:
      context: .
      dockerfile: .docker/php/Dockerfile
    image: myapp-fpm:latest
    container_name: myapp-php
    restart: always
    working_dir: /var/www
    environment:
      APP_ENV: production
    volumes:
      - ./storage:/var/www/storage
    depends_on:
      - postgres

  nginx:
    image: nginx:latest
    container_name: myapp-nginx
    ports:
      - "8089:80"
    volumes:
      - ./public:/var/www/public:ro
      - ./.docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./storage:/var/www/storage
    depends_on:
      - app
    restart: always

  postgres:
    image: postgres:15
    container_name: myapp-postgres
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always

  front-builder:
    image: myapp-nodejs:latest
    build:
      dockerfile: ./.docker/nodejs/Dockerfile
      context: .
    command:
      [ "npm", "run", "build" ]
    volumes:
      - ./:/var/www/

volumes:
  pgdata:
